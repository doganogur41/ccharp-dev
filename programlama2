#include <iostream>
#include <vector>
#include <iomanip>
#include <string>
#include <ctime>
#include <map>

using namespace std;

int generateOrderId() {
    static int id = 1000;
    return id++;
}

struct Coffee {
    string name;
    string description;
    double basePrice;
};

struct Order {
    int orderId;
    Coffee coffee;
    string size;
    double price;
    time_t timestamp;
    string username;
};

class CoffeeShop {
private:
    vector<Coffee> menu;
    vector<Order> orders;
    map<string, string> users;
    string currentUser;
    bool isLoggedIn;

public:
    CoffeeShop() : isLoggedIn(false) {
        menu.push_back({"Espresso", "Yoğun ve sert bir kahve", 15.0});
        menu.push_back({"Latte", "Sütlü ve yumuşak içimli", 18.0});
        menu.push_back({"Cappuccino", "Köpüklü espresso ve süt", 17.0});
        menu.push_back({"Americano", "Sıcak su ile seyreltilmiş espresso", 16.0});
        menu.push_back({"Mocha", "Çikolata aromalı kahve", 20.0});

        users["admin"] = "1234";
        users["ahmet"] = "pass1";
        users["ayse"] = "coffee";
    }

    void authMenu() {
        int choice;
        do {
            cout << "\n==== ? GİRİŞ / KAYIT ====" << endl;
            cout << "1. Giriş Yap" << endl;
            cout << "2. Kayıt Ol" << endl;
            cout << "0. Çıkış" << endl;
            cout << "Seçiminiz: ";
            cin >> choice;

            switch (choice) {
                case 1: login(); break;
                case 2: registerUser(); break;
                case 0:
                    cout << "?? Uygulama kapatılıyor..." << endl;
                    exit(0);
                default:
                    cout << "? Geçersiz seçim!" << endl;
            }
        } while (!isLoggedIn);
    }

    void login() {
        string username, password;
        int attempts = 3;

        while (attempts-- > 0) {
            cout << "\n?? Giriş" << endl;
            cout << "Kullanıcı Adı: ";
            cin >> username;
            cout << "Şifre: ";
            cin >> password;

            if (users.count(username) && users[username] == password) {
                isLoggedIn = true;
                currentUser = username;
                cout << "? Giriş başarılı! Hoş geldin, " << currentUser << "!" << endl;
                return;
            } else {
                cout << "? Hatalı kullanıcı adı veya şifre. Kalan deneme: " << attempts << endl;
            }
        }

        cout << "?? Giriş başarısız. Ana menüye dönülüyor..." << endl;
    }

    void registerUser() {
        string username, password;

        cout << "\n?? Kayıt Ol" << endl;
        cout << "Yeni Kullanıcı Adı: ";
        cin >> username;

        if (users.count(username)) {
            cout << "?? Bu kullanıcı adı zaten alınmış." << endl;
            return;
        }

        cout << "Şifre Belirleyin: ";
        cin >> password;

        users[username] = password;
        cout << "? Kayıt başarılı! Şimdi giriş yapabilirsiniz." << endl;
    }

    void displayMenu() {
        cout << "\n?? --- KAHVE MENÜSÜ ---" << endl;
        for (size_t i = 0; i < menu.size(); ++i) {
            cout << i + 1 << ". " << menu[i].name 
                 << " - " << menu[i].basePrice << " TL" << endl;
            cout << "   Açıklama: " << menu[i].description << endl;
        }
    }

    double getSizeMultiplier(int sizeOption) {
        switch (sizeOption) {
            case 1: return 1.0;
            case 2: return 1.2;
            case 3: return 1.5;
            default: return 1.0;
        }
    }

    void takeOrder() {
        if (!isLoggedIn) {
            cout << "?? Sipariş vermek için giriş yapmalısınız." << endl;
            return;
        }

        int choice, sizeChoice;
        string sizeLabel;
        displayMenu();

        cout << "\n? Lütfen kahve numarasını seçin: ";
        cin >> choice;
        if (choice < 1 || choice > menu.size()) {
            cout << "? Geçersiz seçim!" << endl;
            return;
        }

        cout << "\nBoyut Seçin:" << endl;
        cout << "1. Küçük" << endl;
        cout << "2. Orta" << endl;
        cout << "3. Büyük" << endl;
        cout << "Seçiminiz (1-3): ";
        cin >> sizeChoice;

        switch (sizeChoice) {
            case 1: sizeLabel = "Küçük"; break;
            case 2: sizeLabel = "Orta"; break;
            case 3: sizeLabel = "Büyük"; break;
            default:
                cout << "? Geçersiz seçim!" << endl;
                return;
        }

        double multiplier = getSizeMultiplier(sizeChoice);
        double finalPrice = menu[choice - 1].basePrice * multiplier;
        int orderId = generateOrderId();
        time_t now = time(0);
        orders.push_back({orderId, menu[choice - 1], sizeLabel, finalPrice, now, currentUser});

        cout << "? Sipariş Alındı: " << menu[choice - 1].name 
             << " (" << sizeLabel << ") - " 
             << fixed << setprecision(2) << finalPrice 
             << " TL (Sipariş No: " << orderId << ")" << endl;
    }

    void showOrders() {
        if (orders.empty()) {
            cout << "?? Henüz sipariş yok." << endl;
            return;
        }

        cout << "\n?? --- SİPARİŞLER ---" << endl;
        double total = 0.0;

        // C++98 uyumlu index-tabanlı döngü
        for (size_t i = 0; i < orders.size(); ++i) {
            const Order& order = orders[i];
            if (order.username != currentUser) continue;

            char* dt = ctime(&order.timestamp);
            cout << "?? Sipariş No: " << order.orderId << endl;
            cout << "    Ürün: " << order.coffee.name 
                 << " (" << order.size << ")" << endl;
            cout << "    Fiyat: " << fixed << setprecision(2) 
                 << order.price << " TL" << endl;
            cout << "    Zaman: " << dt;
            cout << "-----------------------------" << endl;

            total += order.price;
        }

        cout << "?? Toplam: " << fixed << setprecision(2) 
             << total << " TL" << endl;
    }

    void cancelOrder() {
        if (orders.empty()) {
            cout << "? İptal edilecek sipariş yok." << endl;
            return;
        }

        int id;
        cout << "İptal etmek istediğiniz sipariş numarasını girin: ";
        cin >> id;

        for (size_t i = 0; i < orders.size(); ++i) {
            if (orders[i].orderId == id && orders[i].username == currentUser) {
                cout << "? " << orders[i].coffee.name 
                     << " siparişi iptal edildi." << endl;
                orders.erase(orders.begin() + i);
                return;
            }
        }

        cout << "? Sipariş bulunamadı." << endl;
    }

    void run() {
        authMenu();

        int option;
        do {
            cout << "\n===== ? Kahve Sipariş Uygulaması =====" << endl;
            cout << "1. Menüyü Görüntüle" << endl;
            cout << "2. Sipariş Ver" << endl;
            cout << "3. Siparişleri Görüntüle" << endl;
            cout << "4. Sipariş İptali" << endl;
            cout << "5. Geçmiş Siparişler" << endl;
            cout << "0. Çıkış" << endl;
            cout << "Seçiminiz: ";
            cin >> option;

            switch (option) {
                case 1: displayMenu(); break;
                case 2: takeOrder(); break;
                case 3: showOrders(); break;
                case 4: cancelOrder(); break;
                case 5: showOrders(); break;
                case 0:
                    cout << "?? Görüşmek üzere, " << currentUser 
                         << ". Uygulama kapatılıyor." << endl;
                    break;
                default:
                    cout << "? Geçersiz seçim!" << endl;
            }
        } while (option != 0);
    }
};

int main() {
    CoffeeShop app;
    app.run();
    return 0;
}
